{"ast":null,"code":"/* Timeout */\nclass NamedError extends Error {\n  get name() {\n    return this.constructor.name;\n  }\n}\nclass TimeoutError extends NamedError {\n  constructor() {\n    const message = 'A timeout occurred while communicating with Spotify\\'s Web API.';\n    super(message);\n  }\n}\n\n/* Web API Parent and fallback error */\nclass WebapiError extends NamedError {\n  constructor(body, headers, statusCode, message) {\n    super(message);\n    this.body = body;\n    this.headers = headers;\n    this.statusCode = statusCode;\n  }\n}\n\n/** \n * Regular Error\n * { status : <integer>, message : <string> }\n */\nclass WebapiRegularError extends WebapiError {\n  constructor(body, headers, statusCode) {\n    const message = 'An error occurred while communicating with Spotify\\'s Web API.\\n' + 'Details: ' + body.error.message + '.';\n    super(body, headers, statusCode, message);\n  }\n}\n\n/**\n * Authentication Error \n * { error : <string>, error_description : <string> }\n */\nclass WebapiAuthenticationError extends WebapiError {\n  constructor(body, headers, statusCode) {\n    const message = 'An authentication error occurred while communicating with Spotify\\'s Web API.\\n' + 'Details: ' + body.error + (body.error_description ? ' ' + body.error_description + '.' : '.');\n    super(body, headers, statusCode, message);\n  }\n}\n\n/**\n * Player Error \n * { status : <integer>, message : <string>, reason : <string> }\n */\nclass WebapiPlayerError extends WebapiError {\n  constructor(body, headers, statusCode) {\n    const message = 'An error occurred while communicating with Spotify\\'s Web API.\\n' + 'Details: ' + body.error.message + (body.error.reason ? ' ' + body.error.reason + '.' : '.');\n    super(body, headers, statusCode, message);\n  }\n}\nmodule.exports = {\n  WebapiError,\n  TimeoutError,\n  WebapiRegularError,\n  WebapiAuthenticationError,\n  WebapiPlayerError\n};","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}