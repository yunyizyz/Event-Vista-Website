{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport { debounceTime, distinctUntilChanged, switchMap, tap, finalize, filter } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction MainFormComponent_div_13_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function MainFormComponent_div_13_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const suggestion_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.keywordselected(suggestion_r3.name));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const suggestion_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", suggestion_r3.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(suggestion_r3.name);\n  }\n}\nfunction MainFormComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtemplate(1, MainFormComponent_div_13_button_1_Template, 2, 2, \"button\", 31);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.keywordSgt);\n  }\n}\nfunction MainFormComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30)(1, \"div\", 33);\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let MainFormComponent = /*#__PURE__*/(() => {\n  class MainFormComponent {\n    keywordselected(keyword) {\n      console.log(keyword);\n    }\n    constructor(http) {\n      this.http = http;\n      this.isLoading = false;\n      this.keywordinput = new FormControl();\n      this.keywordSgt = [];\n      this.minLengthTerm = 2;\n    }\n    ngOnInit() {\n      this.keywordinput.valueChanges.pipe(filter(res => {\n        return res !== null && res.length >= this.minLengthTerm;\n      }), debounceTime(300), distinctUntilChanged(), tap(() => {\n        this.errorMsg = \"\";\n        this.keywordSgt = [];\n        this.isLoading = true;\n      }), switchMap(keyword => {\n        if (keyword && keyword.length > 1) {\n          return this.http.get(`https://app.ticketmaster.com/discovery/v2/suggest?apikey=YTieJwbkIX90aLCrqmBHc7juN1fsGhGM&keyword=${keyword}`).pipe(finalize(() => {\n            this.isLoading = false;\n          }));\n        } else {\n          return of([]);\n        }\n      })).subscribe(response => {\n        this.keywordSgt = response._embedded?.attractions || [];\n      });\n    }\n  }\n  MainFormComponent.ɵfac = function MainFormComponent_Factory(t) {\n    return new (t || MainFormComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n  MainFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainFormComponent,\n    selectors: [[\"app-main-form\"]],\n    decls: 53,\n    vars: 3,\n    consts: [[1, \"tb\"], [1, \"main-title\"], [2, \"border-top\", \"1.5px whitesmoke solid\", \"margin-top\", \"2%\", \"margin-bottom\", \"2%\"], [\"id\", \"search-events\", \"method\", \"get\", \"action\", \"http://localhost:3000/\"], [1, \"mb-3\"], [\"for\", \"keyword\", 1, \"form-label\", \"text-start\"], [2, \"color\", \"red\"], [1, \"dropdown\"], [\"type\", \"text\", \"id\", \"keyword\", \"name\", \"keyword\", \"required\", \"\", \"formControlName\", \"keyword\", \"data-bs-toggle\", \"dropdown\", \"aria-expanded\", \"false\", 1, \"form-control\", 3, \"formControl\"], [\"class\", \"dropdown-menu w-100\", 4, \"ngIf\"], [1, \"row\", \"mb-3\"], [1, \"col-md-6\"], [\"for\", \"distance\", 1, \"form-label\", \"text-start\"], [\"type\", \"number\", \"id\", \"distance\", \"name\", \"distance\", \"placeholder\", \"10\", 1, \"form-control\"], [\"for\", \"category\", 1, \"form-label\", \"text-start\"], [\"id\", \"category\", \"name\", \"category\", \"required\", \"\", 1, \"form-select\"], [\"value\", \"default\", 1, \"opt\"], [\"value\", \"music\"], [\"value\", \"sports\"], [\"value\", \"arts\"], [\"value\", \"films\"], [\"value\", \"miscellaneous\"], [\"for\", \"location\", 1, \"form-label\", \"text-start\"], [1, \"input-group\"], [\"type\", \"text\", \"id\", \"location\", \"name\", \"location\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"checkbox\", \"id\", \"check-detect\", \"onclick\", \"Checkfunc()\"], [\"for\", \"check-detect\", 1, \"form-label\", \"ms-2\"], [1, \"mb-3\", \"d-flex\", \"justify-content-center\"], [\"id\", \"searchbutton\", \"type\", \"submit\", 1, \"btn\", \"btn-danger\", \"mx-2\"], [\"type\", \"reset\", 1, \"btn\", \"btn-primary\", \"mx-2\"], [1, \"dropdown-menu\", \"w-100\"], [\"class\", \"dropdown-item\", 3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"dropdown-item\", 3, \"value\", \"click\"], [1, \"is-loading\"]],\n    template: function MainFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n        i0.ɵɵtext(3, \"Event Search\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"form\", 3)(6, \"div\", 4)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Keyword:\");\n        i0.ɵɵelementStart(9, \"span\", 6);\n        i0.ɵɵtext(10, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelement(12, \"input\", 8);\n        i0.ɵɵtemplate(13, MainFormComponent_div_13_Template, 2, 1, \"div\", 9);\n        i0.ɵɵtemplate(14, MainFormComponent_div_14_Template, 3, 0, \"div\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"div\", 10)(16, \"div\", 11)(17, \"label\", 12);\n        i0.ɵɵtext(18, \"Distance (miles):\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 11)(21, \"label\", 14);\n        i0.ɵɵtext(22, \"Category:\");\n        i0.ɵɵelementStart(23, \"span\", 6);\n        i0.ɵɵtext(24, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(25, \"select\", 15)(26, \"option\", 16);\n        i0.ɵɵtext(27, \"Default\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"option\", 17);\n        i0.ɵɵtext(29, \"Music\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"option\", 18);\n        i0.ɵɵtext(31, \"Sports\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"option\", 19);\n        i0.ɵɵtext(33, \"Arts & Theatre\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"option\", 20);\n        i0.ɵɵtext(35, \"Films\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"option\", 21);\n        i0.ɵɵtext(37, \"Miscellaneous\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(38, \"div\", 4)(39, \"label\", 22);\n        i0.ɵɵtext(40, \"Location:\");\n        i0.ɵɵelementStart(41, \"span\", 6);\n        i0.ɵɵtext(42, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(43, \"div\", 23);\n        i0.ɵɵelement(44, \"input\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(45, \"input\", 25);\n        i0.ɵɵelementStart(46, \"label\", 26);\n        i0.ɵɵtext(47, \"Auto-Detect Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"div\", 27)(49, \"button\", 28);\n        i0.ɵɵtext(50, \"SUBMIT\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"button\", 29);\n        i0.ɵɵtext(52, \"CLEAR\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"formControl\", ctx.keywordinput);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading && ctx.keywordSgt.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormControlDirective, i3.FormControlName],\n    styles: [\".tb[_ngcontent-%COMP%]{background-color:#4e4e4e75;-webkit-backdrop-filter:blur(5px);backdrop-filter:blur(5px);border-radius:1%;padding:5%;width:80%;margin:0 auto}.main-title[_ngcontent-%COMP%]{font-family:Cambria;color:#f5f5f5;font-size:70px;margin:auto auto 2%;text-align:center}label[_ngcontent-%COMP%], .new-label[_ngcontent-%COMP%]{color:#7fffd4;font-size:15px;padding-bottom:1px}datalist[_ngcontent-%COMP%]{position:absolute;background-color:#fff;border:1px solid grey;border-radius:0 0 5px 5px;border-top:none;font-family:sans-serif;width:350px;padding:5px}option[_ngcontent-%COMP%]{background-color:#fff;padding:4px;color:#3d3d3d;margin-bottom:1px;font-size:18px;cursor:pointer}\"]\n  });\n  return MainFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}